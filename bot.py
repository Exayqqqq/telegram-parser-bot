
import asyncio
import logging
from aiogram import Bot, Dispatcher, types
from aiogram.types import Message
from aiogram.filters import Command
from telegram_parser_bot import run_parser_for_user  # –∏–º–ø–æ—Ä—Ç –ø–∞—Ä—Å–µ—Ä–∞

import os
BOT_TOKEN = os.getenv("BOT_TOKEN")

bot = Bot(token=BOT_TOKEN, parse_mode="HTML")
dp = Dispatcher()

@dp.message(Command("start"))
async def cmd_start(message: Message):
    await message.answer("–ü—Ä–∏–≤–µ—Ç! –û—Ç–ø—Ä–∞–≤—å /parse, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –Ω–æ–≤—ã–µ –æ–±—ä—è–≤–ª–µ–Ω–∏—è.")

@dp.message(Command("parse"))
async def cmd_parse(message: Message):
    user_id = str(message.from_user.id)
    await message.answer("üîç –ò–¥—ë—Ç –ø–∞—Ä—Å–∏–Ω–≥...")

    async for link in run_parser_for_user(user_id):
        if link:
            await message.answer(f"üîó <a href='{link}'>–ù–æ–≤–æ–µ –æ–±—ä—è–≤–ª–µ–Ω–∏–µ</a>")
    else:
        await message.answer("‚úÖ –ü–∞—Ä—Å–∏–Ω–≥ –∑–∞–≤–µ—Ä—à—ë–Ω –∏–ª–∏ –¥–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â—ë–Ω.")

async def main():
    logging.basicConfig(level=logging.INFO)
    await dp.start_polling(bot)

if __name__ == "__main__":
    asyncio.run(main())
